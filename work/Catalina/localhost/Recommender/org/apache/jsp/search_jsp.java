/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.40
 * Generated at: 2013-06-28 18:53:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.mongodb.*;
import java.util.*;
import java.io.PrintWriter;
import org.bson.types.ObjectId;;

public final class search_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/templates/footer.jsp", Long.valueOf(1371670985000L));
    _jspx_dependants.put("/templates/header.jsp", Long.valueOf(1372115308000L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<link rel=\"stylesheet\" href=\"css/base.css\" type=\"text/css\" media=\"screen\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/skeleton.css\" type=\"text/css\" media=\"screen\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/layout.css\" type=\"text/css\" media=\"screen\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style.css\" type=\"text/css\" media=\"screen\">\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n");
      out.write("<title>Recommender</title>\n");
      out.write("</head>\n");
      out.write("<title>Recommender</title>\n");
      out.write("<body>\n");
      out.write("<h1>Recommender</h1>");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"container\" align=\"center\">\n");
      out.write("\t<div class=\"offset-by-six\">\n");
      out.write("\t\t<div class=\"four columns\">\n");
      out.write("\t\t\tPlease select the user for which you would like to generate\n");
      out.write("\t\t\trecommendations then click the \"Recommend\" button to run the engine.\n");
      out.write("\t\t\t<br> <br>\n");
      out.write("\t\t\t");

				// Grab the MongoClient from the ServletContext.
				ServletContext context = request.getSession().getServletContext();

				// Grab the MongoClient, the database, and the collection.
				MongoClient m = (MongoClient) context.getAttribute("mongo");
				DB db = m.getDB("daviddb");
				DBCollection coll = db.getCollection("users");

				// Iterate through the collection and put the names of every user in an ArrayList.
				ArrayList<String> usernames = new ArrayList<String>();
				ArrayList<ObjectId> ids = new ArrayList<ObjectId>();
				DBCursor cursor = coll.find();
				int counter = 0;
				while (cursor.hasNext()) {
					DBObject current = cursor.next();
					usernames.add((String) current.get("user"));
					ids.add((ObjectId) current.get("_id"));
					counter++;
				}
			
      out.write("\n");
      out.write("\t\t\t<div align=center>\n");
      out.write("\t\t\t\t<form method=\"post\" action=\"Recommend\">\n");
      out.write("\t\t\t\t\t<select name=\"user\">\n");
      out.write("\t\t\t\t\t\t");

							for (int i = 0; i < counter; i++) {
								out.println("<option value=" + ids.get(i).toString() + ">"
										+ usernames.get(i) + "</option>");
							}
						
      out.write("\n");
      out.write("\t\t\t\t\t</select> <INPUT TYPE=\"submit\" name=\"submit\" />\n");
      out.write("\t\t\t\t</form>\n");
      out.write("\t\t\t\t<p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("</p>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
